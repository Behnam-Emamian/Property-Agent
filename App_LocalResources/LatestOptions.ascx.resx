<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SelectModule.Text" xml:space="preserve">
    <value>&lt;Select Module&gt;</value>
  </data>
  <data name="Module.Text" xml:space="preserve">
    <value>Module</value>
  </data>
  <data name="Module.Help" xml:space="preserve">
    <value>Select the property agent module to link to.</value>
  </data>
  <data name="Type.Text" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Type.Help" xml:space="preserve">
    <value>Select the property agent type to filter on.</value>
  </data>
  <data name="AllTypes.Text" xml:space="preserve">
    <value>&lt;All Types&gt;</value>
  </data>
  <data name="ShowFeaturedOnly.Text" xml:space="preserve">
    <value>Featured Only?</value>
  </data>
  <data name="ShowFeaturedOnly.Help" xml:space="preserve">
    <value>Check to only show featured properties.</value>
  </data>
  <data name="plMaxNumber.Text" xml:space="preserve">
    <value>Maximum Number</value>
  </data>
  <data name="plMaxNumber.Help" xml:space="preserve">
    <value>Enter the maximum number of items to display.</value>
  </data>
  <data name="valMaxNumber.ErrorMessage" xml:space="preserve">
    <value>&lt;br&gt;Maximum Number Is Required.</value>
  </data>
  <data name="valMaxNumberIsNumber.ErrorMessage" xml:space="preserve">
    <value>&lt;br&gt;Maximum Number Must Be A Number</value>
  </data>
  <data name="plItemsPerRow.Text" xml:space="preserve">
    <value>Items Per Row</value>
  </data>
  <data name="plItemsPerRow.Help" xml:space="preserve">
    <value>Enter the number of items to display per row.</value>
  </data>
  <data name="valItemsPerRow.ErrorMessage" xml:space="preserve">
    <value>&lt;br&gt;Items Per Row Is Required.</value>
  </data>
  <data name="valItemsPerRowIsNumber.ErrorMessage" xml:space="preserve">
    <value>&lt;br&gt;Items Per Row Must Be A Number</value>
  </data>
  <data name="plSortBy.Text" xml:space="preserve">
    <value>Sort By</value>
  </data>
  <data name="plSortBy.Help" xml:space="preserve">
    <value>Select the default sort order.</value>
  </data>
  <data name="plSortDirection.Text" xml:space="preserve">
    <value>Sort Direction</value>
  </data>
  <data name="plSortDirection.Help" xml:space="preserve">
    <value>Select the default sort direction.</value>
  </data>
  <data name="Ascending.Text" xml:space="preserve">
    <value>Ascending</value>
  </data>
  <data name="Descending.Text" xml:space="preserve">
    <value>Descending</value>
  </data>
  <data name="Modified.Text" xml:space="preserve">
    <value>Last Modified</value>
  </data>
  <data name="Published.Text" xml:space="preserve">
    <value>Published</value>
  </data>
  <data name="Hits.Text" xml:space="preserve">
    <value>Hits</value>
  </data>
  <data name="Random.Text" xml:space="preserve">
    <value>Random</value>
  </data>
  <data name="plLayoutMode.Text" xml:space="preserve">
    <value>Layout Mode</value>
  </data>
  <data name="plLayoutMode.Help" xml:space="preserve">
    <value>Select a layout for the module.</value>
  </data>
  <data name="TemplateLayout.Text" xml:space="preserve">
    <value>Template Layout</value>
  </data>
  <data name="CustomLayout.Text" xml:space="preserve">
    <value>Custom Layout</value>
  </data>
  <data name="plHeader.Text" xml:space="preserve">
    <value>Header</value>
  </data>
  <data name="plHeader.Help" xml:space="preserve">
    <value>Customize the header template.</value>
  </data>
  <data name="plItem.Text" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="plItem.Help" xml:space="preserve">
    <value>Customize the item template.</value>
  </data>
  <data name="plFooter.Text" xml:space="preserve">
    <value>Footer</value>
  </data>
  <data name="plFooter.Help" xml:space="preserve">
    <value>Customize the footer template.</value>
  </data>
  <data name="ControlTitle_settings.Text" xml:space="preserve">
    <value>Property Agent Latest Settings</value>
  </data>
  <data name="ModuleHelp.Text" xml:space="preserve">
    <value>&lt;h1&gt;Property Agent&lt;/h1&gt;&lt;p&gt;This module allows users to manage properties.&lt;/p&gt;</value>
  </data>
  <data name="plShowRelated.Help" xml:space="preserve">
    <value>Check to show related properties when viewing a type or individual property.</value>
  </data>
  <data name="plShowRelated.Text" xml:space="preserve">
    <value>Show Related?</value>
  </data>
  <data name="Comments.Text" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="Rating.Text" xml:space="preserve">
    <value>Rating</value>
  </data>
  <data name="CustomFields.Help" xml:space="preserve">
    <value>Select custom fields to filter by.</value>
  </data>
  <data name="CustomFields.Text" xml:space="preserve">
    <value>Custom Fields</value>
  </data>
  <data name="FilterSettings.Text" xml:space="preserve">
    <value>Filter Settings</value>
  </data>
  <data name="FilterSettingsDescription.Text" xml:space="preserve">
    <value>In this section, you can filter the latest properties by the criteria below. </value>
  </data>
  <data name="LayoutSettings.Text" xml:space="preserve">
    <value>Layout Settings</value>
  </data>
  <data name="LayoutSettingsDescription.Text" xml:space="preserve">
    <value>In this section, you can customize the layout of the latest module.</value>
  </data>
  <data name="SelectCustomField.Text" xml:space="preserve">
    <value>&lt;Select Custom Field&gt;</value>
  </data>
  <data name="cmdAddFilter.Text" xml:space="preserve">
    <value>Add Filter</value>
  </data>
  <data name="CustomField.Header" xml:space="preserve">
    <value>Custom Field</value>
  </data>
  <data name="Value.Header" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="MaxAge.Help" xml:space="preserve">
    <value>Maximum age of properties (days), leave blank for no filter.</value>
  </data>
  <data name="MaxAge.Text" xml:space="preserve">
    <value>Max Age</value>
  </data>
  <data name="MaxAge2.Help" xml:space="preserve">
    <value>(days), leave blank for no filter.</value>
  </data>
  <data name="StartDate.Help" xml:space="preserve">
    <value>Date to begin showing properties from.</value>
  </data>
  <data name="StartDate.Text" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="valMaxAgeType.ErrorMessage" xml:space="preserve">
    <value>&lt;br&gt;Max Age Must Be A Number</value>
  </data>
  <data name="valStartDate.ErrorMessage" xml:space="preserve">
    <value>&lt;br&gt;Start Date Must Be A Date</value>
  </data>
  <data name="plIncludeStylesheet.Help" xml:space="preserve">
    <value>Check to include stylesheet.</value>
  </data>
  <data name="plIncludeStylesheet.Text" xml:space="preserve">
    <value>Include Stylesheet?</value>
  </data>
  <data name="CustomField.Text" xml:space="preserve">
    <value>Custom Fields</value>
  </data>
  <data name="Distance.Text" xml:space="preserve">
    <value>Distance</value>
  </data>
  <data name="Hits1Year.Text" xml:space="preserve">
    <value>Hits (Last Year)</value>
  </data>
  <data name="Hits30Days.Text" xml:space="preserve">
    <value>Hits (Last 30 Days)</value>
  </data>
  <data name="Hits7Days.Text" xml:space="preserve">
    <value>Hits (Last 7 Days)</value>
  </data>
  <data name="plSortFields.Help" xml:space="preserve">
    <value>Check the sort fields that an end user can customise.</value>
  </data>
  <data name="plSortFields.Text" xml:space="preserve">
    <value>Sort Fields</value>
  </data>
  <data name="plUserSortable.Help" xml:space="preserve">
    <value>Check to allow the end user to change the sort order.</value>
  </data>
  <data name="plUserSortable.Text" xml:space="preserve">
    <value>User Sortable?</value>
  </data>
  <data name="Current.Text" xml:space="preserve">
    <value>Current logged in agent</value>
  </data>
  <data name="Parameter.Text" xml:space="preserve">
    <value>Agent parameter in Url</value>
  </data>
  <data name="plSpecificUser.Help" xml:space="preserve">
    <value>Select a specific agent to filter by.</value>
  </data>
  <data name="plSpecificUser.Text" xml:space="preserve">
    <value>Specific Agent</value>
  </data>
  <data name="plUserFilter.Help" xml:space="preserve">
    <value>Optionally filter by agent.</value>
  </data>
  <data name="plUserFilter.Text" xml:space="preserve">
    <value>Agent Filter</value>
  </data>
  <data name="plUserParameter.Help" xml:space="preserve">
    <value>Specify a parameter in the url to filter agent by.</value>
  </data>
  <data name="plUserParameter.Text" xml:space="preserve">
    <value>Agent Parameter</value>
  </data>
  <data name="Specific.Text" xml:space="preserve">
    <value>Specific Agent</value>
  </data>
  <data name="EnablePager.Help" xml:space="preserve">
    <value>Check to enable a pager at the bottom fo latest properties.</value>
  </data>
  <data name="EnablePager.Text" xml:space="preserve">
    <value>Enable Pager?</value>
  </data>
  <data name="PageSize.Help" xml:space="preserve">
    <value>Specify how many properties per page.</value>
  </data>
  <data name="PageSize.Text" xml:space="preserve">
    <value>Pager Size</value>
  </data>
  <data name="plBubbleFeatured.Help" xml:space="preserve">
    <value>Check to bubble featured properties to the top.</value>
  </data>
  <data name="plBubbleFeatured.Text" xml:space="preserve">
    <value>Bubble Featured?</value>
  </data>
  <data name="Expiry.Text" xml:space="preserve">
    <value>Expiry Date</value>
  </data>
  <data name="ReviewField.Text" xml:space="preserve">
    <value>Review Fields</value>
  </data>
  <data name="FreeFlowLayout.Text" xml:space="preserve">
    <value>Free Flow</value>
  </data>
  <data name="plLayoutType.Help" xml:space="preserve">
    <value>Specify how to render latest properties.</value>
  </data>
  <data name="plLayoutType.Text" xml:space="preserve">
    <value>Layout Type</value>
  </data>
  <data name="TableLayout.Text" xml:space="preserve">
    <value>Table</value>
  </data>
  <data name="plEmpty.Help" xml:space="preserve">
    <value>Customize the empty template.</value>
  </data>
  <data name="plEmpty.Text" xml:space="preserve">
    <value>Empty</value>
  </data>
  <data name="ShowShortListOnly.Help" xml:space="preserve">
    <value>Check to limit properties by the short list.</value>
  </data>
  <data name="ShowShortListOnly.Text" xml:space="preserve">
    <value>Shortlist Only?</value>
  </data>
  <data name="plRelatedCustomFields.Help" xml:space="preserve">
    <value>Optionally filter show related by a custom field instead of type.</value>
  </data>
  <data name="plRelatedCustomFields.Text" xml:space="preserve">
    <value>Related Custom Field</value>
  </data>
  <data name="MinAge.Help" xml:space="preserve">
    <value>Minimum age of properties (days), leave blank for no filter.</value>
  </data>
  <data name="MinAge.Text" xml:space="preserve">
    <value>Min Age</value>
  </data>
  <data name="MinAge2.Help" xml:space="preserve">
    <value>(days), leave blank for no filter.</value>
  </data>
  <data name="valMinAgeType.ErrorMessage" xml:space="preserve">
    <value>&lt;br&gt;Min Age Must Be A Number</value>
  </data>
</root>