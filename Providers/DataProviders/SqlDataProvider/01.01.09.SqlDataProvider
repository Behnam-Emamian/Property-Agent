DROP PROCEDURE {databaseOwner}{objectQualifier}Ventrian_PropertyAgent_PropertyList
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}Ventrian_PropertyAgent_PropertyList
	@ModuleID int, 
	@PropertyTypeID int,
	@MaxCount int,
	@IsPublished bit,
	@IsNotPublished bit,
	@IsActive bit,
	@IsPending bit,
	@IsExpired bit,
	@ShowFeaturedOnly bit,
	@SortBy int,
	@SortByID int,
	@SortByIDType int,
	@SortOrder int,
	@CustomFieldIDs nvarchar(4000),
	@SearchValues	nvarchar(4000) 
AS

if( @MaxCount is not null )
begin
	SET ROWCOUNT @MaxCount 
end

SELECT
	p.[PropertyID],
	p.[ModuleID],
	p.[PropertyTypeID],
	p.[IsApproved],
	p.[IsFeatured],
	p.[IsPublished],
	p.[IsArchived],
	p.[DateCreated],
	p.[DateModified],
	p.[DatePublished],
	p.[DateExpired],
	p.[ViewCount],
	pt.[Name] as 'PropertyTypeName',
	(select top 1 [PhotoID] from {databaseOwner}{objectQualifier}Ventrian_PropertyAgent_Photo photo where p.PropertyID = photo.PropertyID order by SortOrder) as 'FirstPhotoID'  
FROM 
	{databaseOwner}{objectQualifier}Ventrian_PropertyAgent_Property p, {databaseOwner}{objectQualifier}Ventrian_PropertyAgent_PropertyType pt 
WHERE
	p.[ModuleID] = @ModuleID
	and 
	p.PropertyTypeID = pt.PropertyTypeID
	and 
	(@PropertyTypeID is null or p.PropertyTypeID = @PropertyTypeID) 
	and
	(@IsPublished is null or p.IsPublished = 1)
	and
	(@IsNotPublished is null or p.IsPublished = 0)
	and
	(@IsActive is null or (p.[DatePublished] < GetDate() and (p.[DateExpired] is null or p.[DateExpired] > GetDate())))
	and
	(@IsPending is null or (p.[DatePublished] > GetDate()))
	and
	(@IsExpired is null or (p.[DateExpired] is not null and p.[DateExpired] < GetDate()))
	and
	(@ShowFeaturedOnly is null or p.IsFeatured = 1)
	and
	((@CustomFieldIDs is null or @SearchValues is null) or (p.PropertyID in (select PropertyID from {databaseOwner}{objectQualifier}Ventrian_PropertyAgent_CustomFieldSearch(@CustomFieldIDs, @SearchValues))))
ORDER BY 
	CASE 
		WHEN @SortBy = 0 and @SortOrder = 1 THEN cast(p.[DateModified] as nvarchar)
              	WHEN @SortBy = 1 and @SortOrder = 1 THEN cast(p.[DatePublished] as nvarchar)
              	WHEN @SortBy = 3 and @SortOrder = 1 and (@SortByIDType <> 1 and @SortByIDType <> 3 and @SortByIDType <> 4) THEN 
			Case 
				WHEN @SortByID is null THEN cast(p.[DateModified] as nvarchar) 
				WHEN @SortByID is not null THEN (SELECT TOP 1 cast(CustomValue as nvarchar) FROM {databaseOwner}{objectQualifier}Ventrian_PropertyAgent_PropertyValue WHERE CustomFieldID = @SortByID AND PropertyID = p.[PropertyID])
			END
              END DESC,
	CASE 
		WHEN @SortBy = 0 and @SortOrder = 0 THEN cast(p.[DateModified] as nvarchar)
              	WHEN @SortBy = 1 and @SortOrder = 0 THEN cast(p.[DatePublished] as nvarchar)
              	WHEN @SortBy = 3 and @SortOrder = 0 and (@SortByIDType <> 1 and @SortByIDType <> 3 and @SortByIDType <> 4) THEN 
			Case 
				WHEN @SortByID is null THEN cast(p.[DateModified] as nvarchar) 
				WHEN @SortByID is not null THEN (SELECT TOP 1 cast(CustomValue as nvarchar) FROM {databaseOwner}{objectQualifier}Ventrian_PropertyAgent_PropertyValue WHERE CustomFieldID = @SortByID AND PropertyID = p.[PropertyID])
			END
              END ASC,
	CASE 
        WHEN @SortBy = 2 and @SortOrder = 1 THEN p.[ViewCount] 
    END DESC,
	CASE 
        WHEN @SortBy = 2 and @SortOrder = 0 THEN p.[ViewCount]
	END ASC,
	CASE 
		WHEN @SortBy = 3 and @SortOrder = 1 and (@SortByIDType = 1 or @SortByIDType = 3 or @SortByIDType = 4) THEN 
			Case 
				WHEN @SortByID is null THEN p.[ViewCount]
				WHEN @SortByID is not null THEN (SELECT TOP 1 cast(cast(CustomValue as nvarchar) as decimal) FROM {databaseOwner}{objectQualifier}Ventrian_PropertyAgent_PropertyValue WHERE CustomFieldID = @SortByID AND PropertyID = p.[PropertyID])
			END
              END DESC,
	CASE 
		WHEN @SortBy = 3 and @SortOrder = 0 and (@SortByIDType = 1 or @SortByIDType = 3 or @SortByIDType = 4) THEN 
			Case 
				WHEN @SortByID is null THEN p.[ViewCount]
				WHEN @SortByID is not null THEN (SELECT TOP 1 cast(cast(CustomValue as nvarchar) as decimal) FROM {databaseOwner}{objectQualifier}Ventrian_PropertyAgent_PropertyValue WHERE CustomFieldID = @SortByID AND PropertyID = p.[PropertyID])
			END
              END ASC
GO

DROP FUNCTION {databaseOwner}{objectQualifier}Ventrian_PropertyAgent_CustomFieldSearchRange
GO

CREATE FUNCTION {databaseOwner}{objectQualifier}Ventrian_PropertyAgent_CustomFieldSearchRange
(
	@PropertyID int,
	@CustomFieldID int,
	@SearchValues nvarchar(255),
	@ValidationType int 
)
RETURNS INT
AS
BEGIN

	DECLARE @CustomValue nvarchar(255)
	SELECT @CustomValue = CAST(CustomValue as nvarchar(255)) FROM {databaseOwner}{objectQualifier}Ventrian_PropertyAgent_PropertyValue WHERE CustomFieldID = @CustomFieldID AND PropertyID = @PropertyID
	
	DECLARE @SearchValueFrom nvarchar(255)
	DECLARE @SearchValueTo nvarchar(255)
	
	SELECT @SearchValueFrom = ''
	SELECT @SearchValueTo = ''
	
	DECLARE @count int 
	SELECT @count = 1
	DECLARE @x int ,@y int, @SearchValue nvarchar(255) 
	SELECT @x = 1
	WHILE @x <= len(@SearchValues)
	BEGIN
		SELECT    @y = CHARINDEX('|', @SearchValues, @x)
	        if @y = 0
	        BEGIN
	            SELECT    @y = len(@SearchValues) + 1
	        end
	
		IF @count = 1 
		BEGIN
			SELECT @SearchValueFrom = SUBSTRING(@SearchValues, @x, @y - @x)
		END
	
		IF @count = 2 
		BEGIN
			SELECT @SearchValueTo = SUBSTRING(@SearchValues, @x, @y - @x)
		END
	
		SELECT @count = @count + 1
	        SELECT    @x = @y +1
	END
	
	-- @ValidationType codes
	-- [None] = 0
	-- [Currency] = 1
	-- [Date] = 2
	-- [Double] = 3
	-- [Integer] = 4
	
	IF @ValidationType = 1 OR @ValidationType = 3 OR @ValidationType = 4
	BEGIN
		DECLARE @doAddFrom bit, @doAddTo bit
		SELECT @doAddFrom = 0
		SELECT @doAddTo = 0
	
		IF isnumeric(@CustomValue) = 1
		BEGIN
			IF LEN(@SearchValueFrom) > 0 
			BEGIN
				IF isnumeric(@SearchValueFrom) = 1 
				BEGIN
					IF cast(@SearchValueFrom as decimal) <= cast(@CustomValue as decimal) 
					BEGIN
						SELECT @doAddFrom = 1
					END	
				END
			END
			ELSE
			BEGIN
				SELECT @doAddFrom = 1
			END
	
			IF LEN(@SearchValueTo) > 0 
			BEGIN
				IF isnumeric(@SearchValueTo) = 1 
				BEGIN
					IF cast(@SearchValueTo as decimal) >= cast(@CustomValue as decimal) 
					BEGIN
						SELECT @doAddTo = 1
					END	
				END
			END
			ELSE
			BEGIN
				SELECT @doAddTo = 1
			END
	
			IF @doAddFrom = 1 AND @doAddTo = 1
			BEGIN
				RETURN 1
			END
		END
	END
	
	IF @ValidationType = 2 
	BEGIN
		DECLARE @doAddFromDate bit, @doAddToDate bit
		SELECT @doAddFromDate = 0
		SELECT @doAddToDate = 0
	
		IF isdate(@CustomValue) = 1
		BEGIN
			IF LEN(@SearchValueFrom) > 0 
			BEGIN
				IF isdate(@SearchValueFrom) = 1 
				BEGIN
					IF cast(@SearchValueFrom as datetime) <= cast(@CustomValue as datetime) 
					BEGIN
						SELECT @doAddFromDate = 1
					END	
				END
			END
			ELSE
			BEGIN
				SELECT @doAddFromDate = 1
			END
	
			IF LEN(@SearchValueTo) > 0 
			BEGIN
				IF isdate(@SearchValueTo) = 1 
				BEGIN
					IF cast(@SearchValueTo as datetime) >= cast(@CustomValue as datetime) 
					BEGIN
						SELECT @doAddToDate = 1
					END	
				END
			END
			ELSE
			BEGIN
				SELECT @doAddToDate = 1
			END
	
			IF @doAddFromDate = 1 AND @doAddToDate = 1
			BEGIN
				RETURN 1
			END
		END
	END

	RETURN 0
END
GO
