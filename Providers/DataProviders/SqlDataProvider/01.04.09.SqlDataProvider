DROP PROCEDURE {databaseOwner}{objectQualifier}Ventrian_PropertyAgent_PropertyList
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}Ventrian_PropertyAgent_PropertyList
	@ModuleID int, 
	@PropertyTypeID int,
	@Status int, 
	@AuthorID int, 
	@IsActive bit,
	@IsPending bit,
	@IsExpired bit,
	@ShowFeaturedOnly bit,
	@SortBy int,
	@SortByID int,
	@SortByIDType int,
	@SortOrder int,
	@CustomFieldIDs nvarchar(4000),
	@SearchValues	nvarchar(4000),
	@PageNumber int, 
	@PageSize int,
	@BubbleFeatured bit 
AS

CREATE TABLE #TempItems 
(
   ID int IDENTITY,
   PropertyID int
)

IF (@CustomFieldIDs is not null AND @SearchValues is not null)
BEGIN
	CREATE TABLE #SearchItems 
	(
   		PropertyID int
	)

	INSERT INTO #SearchItems select PropertyID from {databaseOwner}{objectQualifier}Ventrian_PropertyAgent_CustomFieldSearch(@CustomFieldIDs, @SearchValues)
END
 
DECLARE @maxRow int
DECLARE @startRowIndex int

SET @startRowIndex = (@PageNumber * @PageSize)

SET @maxRow = (@startRowIndex + @PageSize)
SET ROWCOUNT @maxRow

DECLARE @strFields	nvarchar(2000)
DECLARE @strFrom	nvarchar(2000)
DECLARE @strWhere	nvarchar(2000)
DECLARE @strOrder	nvarchar(2000)

SELECT @strFields = 'SELECT p.[PropertyID] '
SELECT @strFrom = ' FROM {databaseOwner}{objectQualifier}Ventrian_PropertyAgent_Property p'
SELECT @strWhere = ' WHERE p.[ModuleID] = ' + convert(nvarchar, @ModuleId)
SELECT @strOrder = ' ORDER BY'

IF (@PropertyTypeID is not null)
	SELECT @strWhere = @strWhere + ' AND p.PropertyTypeID = ' + convert(nvarchar, @PropertyTypeID)

IF (@Status is not null)
	SELECT @strWhere = @strWhere + ' AND p.Status = ' + convert(nvarchar, @Status)

IF (@AuthorID is not null)
	SELECT @strWhere = @strWhere + ' AND p.AuthorID = ' + convert(nvarchar, @AuthorID)

IF (@IsActive is not null)
	SELECT @strWhere = @strWhere + ' AND (p.[DatePublished] < GetDate() and (p.[DateExpired] is null or p.[DateExpired] > GetDate()))'

IF (@IsPending is not null)
	SELECT @strWhere = @strWhere + ' AND (p.[DatePublished] > GetDate())'

IF (@IsExpired is not null)
	SELECT @strWhere = @strWhere + ' AND (p.[DateExpired] is not null and p.[DateExpired] < GetDate())'

IF (@ShowFeaturedOnly is not null)
	SELECT @strWhere = @strWhere + ' AND p.IsFeatured = 1'

IF (@CustomFieldIDs is not null AND @SearchValues is not null)
	SELECT @strWhere = @strWhere + ' AND (p.PropertyID in (select PropertyID from #SearchItems))'

IF (@BubbleFeatured = 1)
	SELECT @strOrder = @strOrder + ' p.[IsFeatured] DESC' 

DECLARE @strOrder2 nvarchar(2000)	

IF (@SortBy = 3) 
BEGIN
	SELECT @strFrom = @strFrom + ' LEFT JOIN {databaseOwner}{objectQualifier}Ventrian_PropertyAgent_PropertyValue pv ON p.PropertyID = pv.PropertyID'
	SELECT @strWhere = @strWhere + ' AND (pv.[CustomFieldID] is null OR pv.[CustomFieldID] = ' + convert(nvarchar, @SortByID) + ')'
	
	SELECT @strOrder2 = ''	
		
	IF( @SortOrder = 1 and (@SortByIDType <> 1 and @SortByIDType <> 3 and @SortByIDType <> 4) )
	BEGIN
		SELECT @strOrder2 = ' cast(pv.CustomValue as nvarchar) DESC'
	END

	IF( @SortOrder = 0 and (@SortByIDType <> 1 and @SortByIDType <> 3 and @SortByIDType <> 4) )
	BEGIN
		SELECT @strOrder2 = ' cast(pv.CustomValue as nvarchar) ASC'
	END

	IF( @SortOrder = 1 and (@SortByIDType = 1 or @SortByIDType = 3 or @SortByIDType = 4) )
	BEGIN
		SELECT @strOrder2 = ' cast(cast(pv.CustomValue as nvarchar) as decimal) DESC'
	END

	IF( @SortOrder = 0 and (@SortByIDType = 1 or @SortByIDType = 3 or @SortByIDType = 4) )
	BEGIN
		SELECT @strOrder2 = ' cast(cast(pv.CustomValue as nvarchar) as decimal) ASC'
	END

	IF( @strOrder = ' ORDER BY' ) 
	BEGIN
		SELECT @strOrder = @strOrder + @strOrder2
	END
	ELSE
	BEGIN
		SELECT @strOrder = @strOrder + ',' + @strOrder2
	END
END
ELSE
BEGIN
	SELECT @strOrder2 = ''	

	IF( @SortBy = 0 and @SortOrder = 1 )
	BEGIN
		SELECT @strOrder2 = ' convert(varchar, p.[DateModified], 120) DESC'
	END

	IF( @SortBy = 0 and @SortOrder = 0 )
	BEGIN
		SELECT @strOrder2 = ' convert(varchar, p.[DateModified], 120) ASC'
	END

	IF( @SortBy = 1 and @SortOrder = 1 )
	BEGIN
		SELECT @strOrder2 = ' convert(varchar, p.[DatePublished], 120) DESC'
	END

	IF( @SortBy = 1 and @SortOrder = 0 )
	BEGIN
		SELECT @strOrder2 = ' convert(varchar, p.[DatePublished], 120) ASC'
	END



	IF( @SortBy = 2 and @SortOrder = 1 )
	BEGIN
		SELECT @strOrder2 = ' p.[ViewCount] DESC'
	END

	IF( @SortBy = 2 and @SortOrder = 0 )
	BEGIN
		SELECT @strOrder2 = ' p.[ViewCount] ASC'
	END

	IF( @SortBy = 4 )
	BEGIN
		SELECT @strOrder2 = ' CAST((rand(24701) * p.[PropertyID]) * 24701 AS int) % (DATEPART(ms, GetDate())+1) + DATEPART(ms, GetDate())'
	END

	IF( @SortBy = 5 )
	BEGIN
		SELECT @strFrom = @strFrom + ' LEFT JOIN {databaseOwner}{objectQualifier}Ventrian_PropertyAgent_PropertyType pt ON p.PropertyTypeID = pt.PropertyTypeID'
		IF( @SortOrder = 1 )
		BEGIN
			SELECT @strOrder2 = ' pt.[Name] DESC'
		END

		IF( @SortOrder = 0 )
		BEGIN
			SELECT @strOrder2 = ' pt.[Name] ASC'
		END
	END

	IF( @strOrder = ' ORDER BY' ) 
	BEGIN
		SELECT @strOrder = @strOrder + @strOrder2
	END
	ELSE
	BEGIN
		SELECT @strOrder = @strOrder + ',' + @strOrder2
	END
END

EXEC('INSERT INTO #TempItems (PropertyID) ' + @strFields + @strFrom + @strWhere)

if( @PageSize > 0 )
	SET ROWCOUNT @PageSize

SELECT
	p.[PropertyID],
	p.[ModuleID],
	p.[PropertyTypeID],
	p.[IsFeatured],
	p.[DateCreated],
	p.[DateModified],
	p.[DatePublished],
	p.[DateExpired],
	p.[ViewCount],
	p.[Status], 
	p.[AuthorID], 
	pt.[Name] as 'PropertyTypeName',
	pt.[Description] as 'PropertyTypeDescription',
	(select count(*) from {databaseOwner}{objectQualifier}Ventrian_PropertyAgent_Photo photo where p.PropertyID = photo.PropertyID) as 'PhotoCount',
	(select top 1 [PhotoID] from {databaseOwner}{objectQualifier}Ventrian_PropertyAgent_Photo photo where p.PropertyID = photo.PropertyID order by SortOrder) as 'FirstPhotoID',
	u.[UserName],
	u.[FirstName] + ' ' + u.[LastName] as 'FullName',
	u.[Email]  
FROM #TempItems t
   	INNER JOIN {databaseOwner}{objectQualifier}ventrian_propertyagent_property p ON
       		t.PropertyID = p.PropertyID
	LEFT JOIN {databaseOwner}{objectQualifier}Ventrian_PropertyAgent_PropertyType pt 
		ON p.PropertyTypeID = pt.PropertyTypeID
	LEFT JOIN {databaseOwner}{objectQualifier}Users u
		ON p.AuthorID = u.UserID 
WHERE
	(@PropertyTypeID is null or p.PropertyTypeID = @PropertyTypeID) 
	and
	ID > @startRowIndex
DROP TABLE #TempItems

SET ROWCOUNT 0

SELECT @strFields = 'SELECT Count(*) as ''TotalRecords'' '
EXEC(@strFields + @strFrom + @strWhere)

IF (@CustomFieldIDs is not null AND @SearchValues is not null)
BEGIN
	DROP TABLE #SearchItems 
END
GO
